<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shu.shw.mapper.CollectMapper" >
  <resultMap id="BaseResultMap" type="com.shu.shw.entity.Collect" >
    <id column="scid" property="scid" jdbcType="VARCHAR" />
    <result column="goodsid" property="goodsid" jdbcType="VARCHAR" />
    <result column="shopid" property="shopid" jdbcType="VARCHAR" />
    <result column="userid" property="userid" jdbcType="VARCHAR" />
    <result column="sccreate" property="sccreate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    scid, goodsid, shopid, userid, sccreate
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.shu.shw.entity.CollectExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from shu_collect
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from shu_collect
    where scid = #{scid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from shu_collect
    where scid = #{scid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.shu.shw.entity.CollectExample" >
    delete from shu_collect
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.shu.shw.entity.Collect" >
    insert into shu_collect (scid, goodsid, shopid, 
      userid, sccreate)
    values (#{scid,jdbcType=VARCHAR}, #{goodsid,jdbcType=VARCHAR}, #{shopid,jdbcType=VARCHAR}, 
      #{userid,jdbcType=VARCHAR}, #{sccreate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.shu.shw.entity.Collect" >
    insert into shu_collect
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="scid != null" >
        scid,
      </if>
      <if test="goodsid != null" >
        goodsid,
      </if>
      <if test="shopid != null" >
        shopid,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="sccreate != null" >
        sccreate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="scid != null" >
        #{scid,jdbcType=VARCHAR},
      </if>
      <if test="goodsid != null" >
        #{goodsid,jdbcType=VARCHAR},
      </if>
      <if test="shopid != null" >
        #{shopid,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="sccreate != null" >
        #{sccreate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shu.shw.entity.CollectExample" resultType="java.lang.Integer" >
    select count(*) from shu_collect
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update shu_collect
    <set >
      <if test="record.scid != null" >
        scid = #{record.scid,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsid != null" >
        goodsid = #{record.goodsid,jdbcType=VARCHAR},
      </if>
      <if test="record.shopid != null" >
        shopid = #{record.shopid,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.sccreate != null" >
        sccreate = #{record.sccreate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update shu_collect
    set scid = #{record.scid,jdbcType=VARCHAR},
      goodsid = #{record.goodsid,jdbcType=VARCHAR},
      shopid = #{record.shopid,jdbcType=VARCHAR},
      userid = #{record.userid,jdbcType=VARCHAR},
      sccreate = #{record.sccreate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shu.shw.entity.Collect" >
    update shu_collect
    <set >
      <if test="goodsid != null" >
        goodsid = #{goodsid,jdbcType=VARCHAR},
      </if>
      <if test="shopid != null" >
        shopid = #{shopid,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        userid = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="sccreate != null" >
        sccreate = #{sccreate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where scid = #{scid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shu.shw.entity.Collect" >
    update shu_collect
    set goodsid = #{goodsid,jdbcType=VARCHAR},
      shopid = #{shopid,jdbcType=VARCHAR},
      userid = #{userid,jdbcType=VARCHAR},
      sccreate = #{sccreate,jdbcType=TIMESTAMP}
    where scid = #{scid,jdbcType=VARCHAR}
  </update>

  <resultMap id="CollectGoodsShop" type="com.shu.shw.entity.Collect">
    <association property="goods" javaType="com.shu.shw.entity.Goods" select="com.shu.shw.mapper.GoodsMapper.selectByPrimaryKey" column="goodsid"/>
    <association property="shop" javaType="com.shu.shw.entity.Shop" select="com.shu.shw.mapper.ShopMapper.selectByPrimaryKey" column="shopid"/>
  </resultMap>

  <select id="selectCollectGoodsShop" parameterType="String" resultMap="CollectGoodsShop">
    select <include refid="Base_Column_List"/> from shu_collect where userid = #{userid}
  </select>


</mapper>